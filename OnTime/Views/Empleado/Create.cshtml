@{
    ViewBag.Title = "Create";
    Layout = "~/Views/_LayoutMain.cshtml";
}

<h2>Agregar Empleado</h2>
@model Tuple<OnTime.Models.Empleado, OnTime.Models.Turno>
<ol id="progressbar" class="progtrckr" data-progtrckr-steps="2">
    <li id="tpTodo" class="progtrckr-todo">Datos Personales</li>
    <li id="tpDpto" class="progtrckr-todo">Departamento y Cargo</li>
    <li id="tpTurno" class="progtrckr-todo">Agregar Turno</li>
    <li id="tpHorario" class="progtrckr-todo">Agregar Horarios</li>
    <li id="confirm" class="progtrckr-todo">Confirmar Registro</li>
</ol>
@using (Html.BeginForm("Create", "Empleado", FormMethod.Post, new { @class = "form" }))
{   
     @Html.ValidationSummary(true)
    <div id="phase1">
        <h3>Datos Personales</h3>
        <div class="col-md-12">
            <div>

                <div class="clearfix"></div>
            </div>
            <ul>
                <li>
                    <label for="txtNombre" class="">Nombre: </label>
                    @Html.TextBoxFor(m => m.Item1.txtNombre, new { @placeholder = "Nombre",@required ="true"})
                    @Html.ValidationMessageFor(model => model.Item1.txtNombre)
                </li>
                <li>
                    <label for="txtApellidos">Apellidos:</label>
                    @Html.TextBoxFor(m => m.Item1.txtApellidos, new { @placeholder = "Apellidos" })
                    @Html.ValidationMessageFor(model => model.Item1.txtApellidos)
                </li>
                <li>
                    <label for="txtCI">C.I.:</label>
                    @Html.TextBoxFor(m => m.Item1.txtCI, new { @placeholder = "CI" })
                    @Html.ValidationMessageFor(model => model.Item1.txtCI)
                </li>
                <li class="dates">
                    <label for="dateFechaNacimiento">Fecha de Nacimiento></label>
                    @Html.TextBoxFor(m => m.Item1.dateFechaNacimiento, new { @placeholder = "Fecha de Nacimiento", @id = "datetime1", @data_date_format = "DD/MM/YYYY" })
                    @Html.ValidationMessageFor(model => model.Item1.dateFechaNacimiento)
                </li>
                <li>
                    <label for="txtPassword">Password:</label>
                    @Html.PasswordFor(m => m.Item1.txtPassword, new { @placeholder = "Password" })
                    @Html.ValidationMessageFor(model => model.Item1.txtPassword)
                </li>
                <li>
                    <label for="txtDireccion">Direcci&oacute;n:</label>
                    @Html.TextBoxFor(m => m.Item1.txtDireccion, new { @placeholder = "Dirección" })
                    @Html.ValidationMessageFor(model => model.Item1.txtDireccion)
                </li>
                <li>
                    <label for="txtDireccion">Tel&eacute;fono:</label>
                    @Html.TextBoxFor(m => m.Item1.txtTelefono, new { @placeholder = "Teléfono" })
                    @Html.ValidationMessageFor(model => model.Item1.txtTelefono)
                </li>
                <li>
                    <label for="txtDireccion">Email:</label>
                    @Html.TextBoxFor(m => m.Item1.txtCorreo, new { @placeholder = "Email" })
                    @Html.ValidationMessageFor(model => model.Item1.txtCorreo)
                </li>
                <li class="dates">
                    <label for="dateFechaContrato">Fecha de Contrato:</label>
                    @Html.TextBoxFor(m => m.Item1.dateFechaContrato, new { @placeholder = "Fecha de Contrato", @id = "datetime2", @data_date_format = "DD/MM/YYYY" })
                    @Html.ValidationMessageFor(model => model.Item1.dateFechaContrato)
                </li>
                <li class="js-unhighlight-label">
                    <label for="intFlagEstado">Estado:</label>
                    <div class="radio-inline">
                        <label class="nonEffect">
                            @Html.RadioButtonFor(m => m.Item1.intFlagEstado, 1) Activo
                            @Html.ValidationMessageFor(model => model.Item1.intFlagEstado)
                        </label>
                    </div>
                    <div class="radio-inline">
                        <label class="nonEffect">
                            @Html.RadioButtonFor(m => m.Item1.intFlagEstado, 0) Desactivado
                            @Html.ValidationMessageFor(model => model.Item1.intFlagEstado)
                        </label>
                    </div>
                </li>
                <li class="js-unhighlight-label">
                    <label for="intTipo">Tipo de Empleado:</label>
                    <div class="radio-inline">
                        <label class="nonEffect">
                            @Html.RadioButtonFor(m => m.Item1.intTipo, 1) Administrador
                            @Html.ValidationMessageFor(model => model.Item1.intTipo)
                        </label>
                    </div>
                    <div class="radio-inline">
                        <label class="nonEffect">
                            @Html.RadioButtonFor(m => m.Item1.intTipo, 2) Jefe de Carrera
                            @Html.ValidationMessageFor(model => model.Item1.intTipo)
                        </label>
                    </div>
                    <div class="radio-inline">
                        <label class="nonEffect">
                            @Html.RadioButtonFor(m => m.Item1.intTipo, 3) Empleado Com&uacute;n
                            @Html.ValidationMessageFor(model => model.Item1.intTipo)
                        </label>
                    </div>
                </li>
            </ul>
            <div>
                <input id="change1" type="button" class="next btn-custom btn-dark pull-right" value="Siguiente" />
                <input type="reset" class="btn-custom btn-red pull-right" value="Cancelar" />
                <div class="clearfix"></div>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
    <div id="phase2" style="display: none;">
        <h3>Departamentos y Cargos</h3>
        <div class="col-md-12">
            <div>
                <div class="clearfix"></div>
            </div>
            <ul>
                <li>
                    <label for="DepartamentoPk" class="nonEffect">Departamento: </label>
                    <div class="selectParent">
                        @Html.DropDownList("DepartamentoPk", "Seleccione un departamento")
                    </div>
                </li>
                <li>
                    <label for="CargoPk">Apellidos:</label>
                    <div class="selectParent">
                        @Html.DropDownList("CargoPk", "Espere por favor")
                    </div>
                </li>
            </ul>
            <div>
                <input type="button" id="addCargo" class="btn-custom btn-dark pull-right" value="A&ntilde;adir" />
                <div class="clearfix"></div>
            </div>
            <div id="listCargos">
            </div>
            <div class="clearfix"></div>
            <div>
                <input type="button" id="change2" class="next btn-custom btn-dark pull-right" value="Siguiente" />
                <input type="reset" id="rchange2" class="btn-custom btn-red pull-right" value="Cancelar" />
                <div class="clearfix"></div>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
    <div id="phase3" style="display: none;">
        <h3>Datos del Turno</h3>
        <div class="col-md-12">
            <ul>
                <li>
                    <label for="txtNombre" class="">Nombre: </label>
                    @Html.TextBoxFor(m => m.Item2.txtNombre, new { @placeholder = "Nombre" })
                    @Html.ValidationMessageFor(model => model.Item2.txtNombre)
                </li>
                <li class="js-unhighlight-label">
                    <label for="intFlagEstado">Estado:</label>
                    <div class="radio-inline">
                        <label class="nonEffect">
                            @Html.RadioButtonFor(m => m.Item2.intEstado, 1) Activo
                            @Html.ValidationMessageFor(model => model.Item2.intEstado)
                        </label>
                    </div>
                    <div class="radio-inline">
                        <label class="nonEffect">
                            @Html.RadioButtonFor(m => m.Item2.intEstado, 0) Desactivado
                            @Html.ValidationMessageFor(model => model.Item2.intEstado)
                        </label>
                    </div>
                </li>
            </ul>
            <div>
                <input id="change3" type="button" class="next btn-custom btn-dark pull-right" value="Siguiente" />
                <input type="reset" id="rchange3" class="btn-custom btn-red pull-right" value="Cancelar" />
                <div class="clearfix"></div>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
    <div id="phase4" style="display: none;">
        <h3>Agregar Horarios</h3>
        <div class="col-md-12">
            <ul>
                <li>
                    <label for="HorarioPk" class="nonEffect">Departamento: </label>
                    <div class="selectParent">
                        @Html.DropDownList("HorarioPk", ViewBag.HorarioPk as SelectList, "Seleccione un Horario")
                    </div>
                </li>
            </ul>
            <div>
                <input type="button" id="addHour" class="btn-custom btn-dark pull-right" value="Agregar Horario" />
                <div class="clearfix"></div>
            </div>
            <div class="clearfix"></div>
            <ul id="listHours">
                <li>
                    <div class="center col-md-3">Nombre</div>
                    <div class="center col-md-2">Hora Inicio</div>
                    <div class="center col-md-2">Hora Fin</div>
                    <div class="center col-md-2">D&iacute;as</div>
                    <div class="center col-md-3">Eliminar</div>
                </li>
            </ul>
            <div>
                <input type="button" id="change4" class="next btn-custom btn-dark pull-right" value="Siguiente" />
                <input type="reset" id="rchange4" class="btn-custom btn-red pull-right" value="Cancelar" />
                <div class="clearfix"></div>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
    <div id="phase5" style="display: none;">
        <h3>Confirmar Registro</h3>
        <div class="center">
            <h4>¿Est&aacute; seguro de los datos?</h4>
        </div>
        <div>
            <input type="submit" class="btn-custom btn-dark pull-right" value="Registrar" />
            <input type="reset"id="rchange5" class="btn-custom btn-red pull-right" value="Cancelar" />
            <div class="clearfix"></div>
        </div>
        <div class="clearfix"></div>
    </div>
}

<script type="text/javascript">
    $(function () {
        var actualYear = (new Date).getFullYear();
        var maxYear = '12/31/' + (actualYear - 18);
        var currentDate = new Date;
        $("li.dates").each(function () {
            $(this).html().replace("data_date_format", "data-date-format");
        });
        $('#datetime1').datetimepicker({
            pickDate: true,                 //en/disables the date picker
            pickTime: false,                //en/disables the time picker
            useCurrent: false,
            minDate: '01/01/1940',               //set a minimum date
            maxDate: maxYear,
            defaultDate: maxYear,
            language: 'es',                  //sets language locale
        });
        $('#datetime2').datetimepicker({
            pickDate: true,                 //en/disables the date picker
            pickTime: false,                //en/disables the time picker
            useCurrent: false,
            minDate: '01/01/1940',               //set a minimum date
            maxDate: currentDate,
            defaultDate: maxYear,
            language: 'es',                  //sets language locale
        });
        
        $("form").validate();
       
        $("#DepartamentoPk").change(function () {
            var dID = $(this).val();
            var url = "/Empleado/GetCargosByIdDpto/";

            $.ajax({
                url: url,
                data: { idDpto: dID },
                type: "POST",
                cache: false,
                success: function (data) {
                    var markup = "<option value='0'>Seleccione un Cargo</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#CargoPk").html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });

        });
        $("#addCargo").click(function () {
            if ($("#listCargos > h4").length < 2) {
                var cargo = '<h4 id="' + $("#CargoPk option:selected").val() + '">' + $("#DepartamentoPk option:selected").text() + ' - ' + $("#CargoPk option:selected").text() + '</h4>';
                $("#listCargos").append(cargo);
            }
        });

        $("#change1").click(function () {
            $("#phase1").hide();
            $("#phase2").show();
            $("#phase3").hide();
            $("#phase4").hide();
            $("#phase5").hide();
            $("#tpTodo").removeClass("progtrckr-todo").addClass("progtrckr-done");
        });

        $("#change2").click(function () {
            $("#phase1").hide();
            $("#phase2").hide();
            $("#phase3").show();
            $("#phase4").hide();
            $("#phase5").hide();
            $("#tpDpto").removeClass("progtrckr-todo").addClass("progtrckr-done");

            var auxiliar = [];
            $("#listCargos > h4").each(function () {
                auxiliar.push({ pkEmpCargo: 0, fkEmpleado: 0, fkCargo: $(this).attr("id") });
            });
            auxiliar = JSON.stringify({ 'auxiliar': auxiliar });
            $.ajax({
                url: "/Empleado/setListaCargos/",
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                data: auxiliar,
                type: "POST",
                cache: false,
                success: function () {
                    alert("Registro exitoso");
                }
            });
        });
        $("#rchange2").click(function () {
            $("#phase1").show();
            $("#phase2").hide();
            $("#phase3").hide();
            $("#phase4").hide();
            $("#phase5").hide();
            $("#tpTodo").removeClass("progtrckr-done").addClass("progtrckr-todo");
        });

        $("#change3").click(function () {
            $("#phase1").hide();
            $("#phase2").hide();
            $("#phase3").hide();
            $("#phase4").show();
            $("#phase5").hide();
            $("#tpTurno").removeClass("progtrckr-todo").addClass("progtrckr-done");
        });
        $("#rchange3").click(function () {
            $("#phase1").hide();
            $("#phase2").show();
            $("#phase3").hide();
            $("#phase4").hide();
            $("#phase5").hide();
            $("#tpDpto").removeClass("progtrckr-done").addClass("progtrckr-todo");
        });

        $("#change4").click(function () {
            $("#phase1").hide();
            $("#phase2").hide();
            $("#phase3").hide();
            $("#phase4").hide();
            $("#phase5").show();
            $("#tpHorario").removeClass("progtrckr-todo").addClass("progtrckr-done");
            var horarios = [];
            $("input.pk").each(function () {
                horarios.push({ pkHoTurno: 0, fkHorario: $(this).attr("id"), tkTurno: 0 });
            });
            horarios = JSON.stringify({ 'horarios': horarios });
            $.ajax({
                url: "/Empleado/setListaHorarios/",
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                data: horarios,
                type: "POST",
                cache: false,
                success: function () {
                    alert("Registro exitoso");
                }
            });
        });
        $("#rchange4").click(function () {
            $("#phase1").hide();
            $("#phase2").hide();
            $("#phase3").show();
            $("#phase4").hide();
            $("#phase5").hide();
            $("#tpTurno").removeClass("progtrckr-done").addClass("progtrckr-todo");
        });
        $("#rchange5").click(function () {
            $("#phase1").hide();
            $("#phase2").hide();
            $("#phase3").hide();
            $("#phase4").show();
            $("#phase5").hide();
            $("#tpHorario").removeClass("progtrckr-done").addClass("progtrckr-todo");
        });
        $("#addHour").click(function () {
            var dID = $("#HorarioPk").val();
            var url = "/Turno/GetDatosHorario/";

            $.ajax({
                url: url,
                data: { idHorario: dID },
                type: "POST",
                cache: false,
                success: function (data) {
                    var html = '<li class="fila form-group">';
                    html += '<div class="col-md-3"><input type="text" disabled="disabled" class="pk form-control" id="' + data.pkHorario + '" value="' + data.txtNombre + '"/></div>';
                    html += '<div class="col-md-2"><input type="text" disabled="disabled" class="horaInicio form-control" placeholder="08:00" value="' + data.tHoraEntrada + '"/></div>';
                    html += '<div class="col-md-2"><input type="text" disabled="disabled" class="horaFin form-control" placeholder="08:00" value="' + data.tHoraSalida + '"/></div>';
                    html += '<div class="col-md-2"><input type="text" disabled="disabled" class="dias form-control" placeholder="08:00" value="' + data.txtDias + '"/></div>';
                    html += '<div class="col-md-3"><input type="button" class="btn-red btn-custom removeDiv" value="Borrar"/></div>';
                    html += '<div class="clearfix"></div></li>';
                    $("#listHours").append(html);
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        });
        $('.removeDiv').live('click', function () {
            $(this).closest('li').remove().fadeOut().slow();
        });
    });
    
</script>

