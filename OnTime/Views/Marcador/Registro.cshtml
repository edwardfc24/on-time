@{
    ViewBag.Title = "Registro";
}
@model IEnumerable<OnTime.Models.RegDiario>
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    <link href="~/css/normalize.css" rel="stylesheet" />
    <link href="~/css/bootstrap-theme.min.css" rel="stylesheet" />
    <link href="~/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/main.css" rel="stylesheet" />
    <link href="~/css/style.css" rel="stylesheet" />
    <script src="~/js/jquery-2.0.3.min.js" type="text/javascript"></script>
    <script src="~/js/modernizr-2.6.2.min.js" type="text/javascript"></script>
    <script src="~/js/bootstrap.min.js" type="text/javascript"></script>
    <script src="~/js/bootstrap-datepicker.js" type="text/javascript"></script>
    <script src="~/js/jquery.validate.min.js" type="text/javascript"></script>
    <script src="~/js/onTime.js" type="text/javascript"></script>
</head>
<body>
    <div class="container">
        <div class="row">
            <section class="col-xs-12 col-md-12 login">
                <img src="~/images/bgOnTimeDark.jpg" alt="background" class="img-responsive" />
                <div class="float-content-logins">
                    <div class="row">
                        <h3 class="titles">Control de Asistencia On<span>Time</span></h3>
                    </div>
                    <section>
                        <ul class="contain-horario">
                            @foreach (var item in Model)
                            {
                                <li class="horario">
                                    <div>
                                        <h3>@Html.DisplayFor(modelItem => item.txtNombreHorario)</h3>
                                        <span class="ahorario">@Html.DisplayFor(modelItem => item.tHoraEntrada) - @Html.DisplayFor(modelItem => item.tHoraSalida)</span>
                                        <span class="thorario"></span>
                                    </div>

                                </li>
                            }
                        </ul>
                        @{
                            var messages = (List<OnTime.Models.Mensaje>)ViewBag.Mensajes;
                        }
                        <div class="center" style="color: #fff;">
                            <h2 class="center">Mensajes</h2>
                        </div>
                        @if (messages != null)
                        {
                            <ul class="listMessages">
                                @foreach (var item in messages)
                                {
                                    <li class="mensaje">
                                        <div>
                                            <p>@Html.DisplayFor(modelItem => item.txtDescripcion)</p>
                                        </div>

                                    </li>
                                }
                            </ul>

                        }

                        @Html.Hidden("HorarioSelect")
                        @Html.Hidden("SetHour")
                    </section>
                    <div class="hora">

                        <div class="col-sm-12">
                            <div class="center">
                                <h2 id="reloj">12:45:25</h2>
                            </div>
                        </div>

                    </div>
                    <div class="usuario">
                        <h3>@Html.Display("NameEmpleado")</h3>
                    </div>
                    <div>
                        @Html.ActionLink("Aceptar", "Index", "Marcador", null, new { @class = "btn form-control btn-login btn-asistencia" })
                    </div>
                    <section>
                    </section>
                    <div class="clearfix"></div>
                </div>
            </section>
        </div>
    </div>
    <script type="text/javascript">
        $(window).load(function () {
            var clock = document.getElementById("reloj");
            // But there is a little problem
            // we need to pad 0-9 with an extra
            // 0 on the left for hours, seconds, minutes

            var pad = function (x) {
                return x < 10 ? '0' + x : x;
            };

            var ticktock = function () {
                var d = new Date();

                var h = pad(d.getHours());
                var m = pad(d.getMinutes());
                var s = pad(d.getSeconds());

                var current_time = [h, m, s].join(':');

                clock.innerHTML = current_time;
            };
            ticktock();
            // Calling ticktock() every 1 second
            setInterval(ticktock, 1000);
        });
        $(function () {
            var numberLI = $("#HorarioSelect").val();
            if (numberLI != "-1") {
                var theLI = $(".contain-horario").find("li").eq(numberLI);
                $(theLI).addClass("actualHour");
                var theSpan = $(theLI).find(".thorario");
                $(theSpan).html(" " + $("#SetHour").val())
            }
        });
    </script>
</body>

</html>



